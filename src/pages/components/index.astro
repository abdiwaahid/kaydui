---
import Component from "../../components/Component.astro";
import Layout from "../../layouts/Layout.astro";
import { components, categories } from "../../lib/code";
const cats = categories.map((category) => {
  return {
    ...category,
    components: components.filter(
      (component) => component.category === category.id
    ).length,
  };
});
---

<Layout title="Components -">
  <section class="relative py-20 lg:py-32 overflow-hidden">
    <div
      class="absolute inset-0 bg-gradient-to-br from-blue-50 via-transparent to-purple-50 dark:from-blue-950/20 dark:to-purple-950/20"
    >
    </div>
    <div class="container mx-auto px-4 relative">
      <div class="max-w-4xl mx-auto text-center">
        <h1
          class="text-4xl lg:text-6xl font-bold tracking-tight mb-6 text-gray-900 dark:text-white"
        >
          <span class="text-primary block">Explore Components </span>
        </h1>

        <p
          class="text-xl text-gray-600 dark:text-gray-300 mb-8 max-w-2xl mx-auto"
        >
          A curated collection of production-ready components built with
          Tailwind CSS. Copy, paste, and customize to build your next project
          faster.
        </p>
      </div>
    </div>
  </section>
  <div class="max-w-7xl mx-auto my-12">
    <div class="flex space-x-2 text-sm font-medium gap-10">
      <div class="w-1/3">
        {
          cats.map((category) => (
            <div class="flex items-center py-2 ">
              <h5 class="grow dark:text-white">{category.name}</h5>
              <p class="ml-auto  bg-primary text-white rounded-full px-2">
                {category.components}
              </p>
            </div>
          ))
        }
      </div>
      <div class="grow grid grid-cols-1 md:grid-cols-3 gap-4">
        {components.map((component) => <Component {...component} />)}
      </div>
    </div>
  </div>
</Layout>
