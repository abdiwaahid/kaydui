---
import Header from "../components/Header.astro";
import "../styles/global.css";
const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>
      {title ?? ""} KaydUI - Beautiful Tailwind CSS Components & Templates Library
    </title>
    <meta
      name="title"
      content="KaydUI - Beautiful Tailwind CSS Components & Templates Library"
    />
    <meta
      name="description"
      content="Discover 100+ production-ready Tailwind CSS components and templates. Copy, paste, and customize beautiful UI elements for your next project. Free component library with dark mode support."
    />
    <meta
      name="keywords"
      content="tailwind css, components, ui library, templates, react components, vue components, css framework, web development, frontend, design system, copy paste components, tailwind ui, free components"
    />
    <meta name="author" content="KaydUI" />
    <meta name="robots" content="index, follow" />
    <meta name="language" content="English" />
    <meta name="revisit-after" content="7 days" />
  </head>
  <body class="bg-gray-50 dark:bg-gray-900 transition-colors duration-200">
    <Header />
    <main class="">
      <slot />
    </main>
    <div
      id="toastContainer"
      class="min-w-md fixed top-4 right-4 z-50 space-y-2"
    >
      <!-- Toasts will be added here -->
    </div>
  </body>
</html>

<script>
  window.showToast = function showToast(
    type: string,
    title: string,
    message: string
  ) {
    const toastContainer = document.getElementById("toastContainer")!;

    const toast = document.createElement("div");
    toast.className = `toast-enter bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg p-4 max-w-sm`;

    const iconColor =
      type === "success"
        ? "text-green-500"
        : type === "error"
          ? "text-red-500"
          : "text-blue-500";
    const icon =
      type === "success"
        ? '<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>'
        : type === "error"
          ? '<path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 001.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>'
          : '<path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>';

    toast.innerHTML = `
        <div class="flex items-start">
            <div class="shrink-0">
                <svg class="w-5 h-5 ${iconColor}" fill="currentColor" viewBox="0 0 20 20">
                    ${icon}
                </svg>
            </div>
            <div class="ml-3 w-0 flex-1">
                <p class="text-sm font-medium text-gray-900 dark:text-white">${title}</p>
                <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">${message}</p>
            </div>
            <button onclick="this.parentElement.parentElement.remove()" class="ml-4 shrink-0 text-gray-400 hover:text-gray-600">
                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                </svg>
            </button>
        </div>
    `;

    toastContainer.appendChild(toast);
    setTimeout(() => {
      if (toast.parentElement) {
        toast.classList.remove("toast-enter");
        toast.classList.add("toast-exit");
        setTimeout(() => {
          if (toast.parentElement) {
            toast.remove();
          }
        }, 300);
      }
    }, 5000);
  };
</script>
